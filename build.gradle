plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'kakaotech-bootcamp.team-21'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter'


	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

//	추가 라이브러리
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	archiveBaseName.set('spring-backend-app')
	archiveVersion.set('0.0.0-SNAPSHOT')
	mainClass.set('kakaotech_bootcamp.team_21.coverletter_spring_project.CoverletterSpringProjectApplication')
	// 여기에 메인 클래스의 전체 경로를 입력하세요.
}

task printJarInfo {
	doLast {
		print "${bootJar.archiveBaseName.get()}-${bootJar.archiveVersion.get()}.jar"
	}
}